#include "tcpdevice.h"
#include "tcpdevicewriter.h"
#include <iostream>

TcpDevice::TcpDevice(std::string& host, unsigned int port)
{

}

TcpDevice::~TcpDevice()
{
    if(m_Socket) m_Socket->close();
}


// Resolver
void TcpDevice::OnTcpResolveConnect(boost::asio::ip::tcp::socket* Socket)
{
    m_Socket = Socket;
    TcpDeviceReader::AsyncRead(*m_Socket, this);
}

void TcpDevice::OnTcpResolveError(const std::string& Message)
{
    std::cout << Message << std::endl;
}


// Reader
void TcpDevice::OnTcpReadSuccess(const std::string& Message)
{
    std::cout << Message << std::endl;
    TcpDeviceReader::AsyncRead(*m_Socket, this);
}


void TcpDevice::OnTcpReadError(const std::string& Message)
{
    std::cout << "Error: " << Message << std::endl;
}


// Writer
void OnTcpWriteSuccess(std::size_t BytesTransferred);
void OnTcpWriteError(const std::string& Message);