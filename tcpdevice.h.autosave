#ifndef TCPDEVICE_H
#define TCPDEVICE_H

#include <string>
#include "tcpresolvelistener.h"
#include "tcpdevicereader.h"
#include "tcpdevicewriter.h"
#include <boost/asio.hpp>


class TcpDevice : public TcpResolveListener, public TcpReadListener, public TcpWriteListener
{
public:
    TcpDevice(std::string& host, unsigned int port);
    virtual ~TcpDevice();

    // Resolver
    void OnTcpResolveConnect(boost::asio::ip::tcp::socket* Socket) override;
    void OnTcpResolveError(const std::string& Message) override;

    // Reader
    void OnTcpReadSuccess(const std::string& Message) override;
    void OnTcpReadError(const std::string& Message) override;
    
    // Writer
    void OnTcpWriteSuccess(std::size_t BytesTransferred);
    void OnTcpWriteError(const std::string& Message);

private:
    boost::asio::ip::tcp::socket* m_Socket = nullptr;
};

#endif // TCPDEVICE_H
